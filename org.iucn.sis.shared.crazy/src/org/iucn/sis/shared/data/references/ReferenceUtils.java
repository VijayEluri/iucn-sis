package org.iucn.sis.shared.data.references;

import java.util.List;
import java.util.Map;

import org.iucn.sis.client.referenceui.ReferenceUI;

/**
 * This class is used by both the GWT-Client and Restlet-based server to handle
 * generation/parsing of payloads that communicate about references; chiefly,
 * the two operations concerned are a lookup, which returns what assessments use
 * a particular reference, and a replace, which switches out one reference for
 * another in a set of assessments.
 * 
 * @author adam
 * 
 */
public class ReferenceUtils {

	/**
	 * Takes the String of data generated by
	 * ReferenceUtils.serializeLookupRequest(...) and parses out a list of
	 * Reference IDs that can be used to perform a lookup.
	 * 
	 * @param payload
	 *            - data generated by generatePayloadForReferenceLookup(...)
	 * @return a List of reference IDs
	 */
	public static List<String> deserializeLookupRequest(String payload) {
		return null;
	}

	/**
	 * @param
	 * @return a Map of reference IDs to a List of Assessment IDs that use it
	 */
	public static Map<String, List<String>> deserializeLookupResults(String payload) {
		return null;
	}

	public static String seralizeReplaceRequest(ReferenceUI original, ReferenceUI replacement,
			String excludeAssessmentID, String excludeAssessmentType) {
		StringBuilder ret = new StringBuilder("<replace>\n");
		ret.append("<original>\n");
		ret.append(original.toXML());
		ret.append("</original>\n<replacement>\n");
		ret.append(replacement.toXML());
		ret.append("</replacement>\n");

		if (excludeAssessmentID != null && excludeAssessmentType != null) {
			ret.append("<exclude id=\"");
			ret.append(excludeAssessmentID);
			ret.append("\" type=\"");
			ret.append(excludeAssessmentType);
			ret.append("\" />\n");
		}
		ret.append("</replace>");

		return ret.toString();
	}

	/**
	 * Takes a list of reference IDs and generates a String of data to pass to a
	 * server to ask for a "lookup" query.
	 * 
	 * @param references
	 *            - a list of Reference IDs
	 * @return
	 */
	public static String serializeLookupRequest(List<String> references) {
		StringBuilder builder = new StringBuilder();

		return null;
	}

	public static String serializeLookupResults(Map<String, List<String>> refsToAssessments) {
		return null;
	}
}
