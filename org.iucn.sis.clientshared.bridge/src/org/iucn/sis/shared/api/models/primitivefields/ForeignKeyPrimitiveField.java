package org.iucn.sis.shared.api.models.primitivefields;

import java.util.Map;

import org.iucn.sis.shared.api.models.Field;
import org.iucn.sis.shared.api.models.PrimitiveField;

import com.solertium.lwxml.shared.NativeElement;

/**
 * ForeignKeyPrimitiveField generated by hbm2java
 */
public class ForeignKeyPrimitiveField extends PrimitiveField<Integer> implements
		java.io.Serializable {
	
	private Map<Integer, String> options;

	private Integer value;
	private String tableID;

	public ForeignKeyPrimitiveField() {
	}
	
	public ForeignKeyPrimitiveField(String name, Field field) {
		super(name, field);
	}

	public ForeignKeyPrimitiveField(String name, Field field, Integer value,
			String tableID) {
		super(name, field);
		this.value = value;
		this.tableID = tableID;
	}

	public Integer getValue() {
		return value;
	}

	public void setValue(Integer value) {
		this.value = value;
	}

	@Override
	public String getSimpleName() {
		return PrimitiveFieldType.FOREIGN_KEY_PRIMITIVE.getName();
	}
	
	public String getTableID() {
		return this.tableID;
	}

	public void setTableID(String tableID) {
		this.tableID = tableID;
	}
	
	public void setOptions(Map<Integer, String> options) {
		this.options = options;
	}

	@Override
	public ForeignKeyPrimitiveField deepCopy() {
		ForeignKeyPrimitiveField ret = new ForeignKeyPrimitiveField();
		copyInto(ret);
		return ret;
	}

	@Override
	public void setRawValue(String value) throws NumberFormatException {
		if (value == null || value.equals("")) {
			setValue(0);
		} else
			setValue(Integer.valueOf(value));
	}
	
	@Override
	public String toXML() {
		StringBuilder str = new StringBuilder("<");
		str.append(getName());
		str.append(" id=\"");
		str.append(getId() == null ? "0" : getId());
		str.append("\" ");
		str.append(TYPE_TAG);
		str.append("=\"");
		str.append(getSimpleName());
		str.append("\" tableID=\"");
		str.append(getTableID());
		str.append("\">");
		str.append("<![CDATA[");
		str.append(getRawValue());
		str.append("]]>");
		str.append("</" + getName() + ">");
		return str.toString();
	}
	
	@Override
	public void fromXML(NativeElement xml) {
		super.fromXML(xml);
		
		String tableID = xml.getAttribute("tableID");
		setTableID(tableID);
	}
}
