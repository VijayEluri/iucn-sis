package org.iucn.sis.shared.api.models;

import com.solertium.lwxml.shared.NativeElement;

// default package
// Generated Apr 27, 2010 9:30:39 AM by Hibernate Tools 3.3.0.GA

/**
 * PrimitiveField generated by hbm2java
 */
public abstract class PrimitiveField<T> implements java.io.Serializable {

	public static final String ROOT_TAG = "prim";
	public static final String TYPE_TAG = "type";
	
	private Integer id;
	private String name;
	private Field field;

	public PrimitiveField() {
	}

	public PrimitiveField(String name, Field field) {
		this.name = name;
		this.field = field;
	}

	public abstract T getValue();
	
	public abstract void setValue(T newValue);
	
	public abstract void setRawValue(String value);
	
	public abstract PrimitiveField<T> deepCopy();
	
	public final void copyInto(PrimitiveField<T> field) {
		field.setId(getId());
		field.setName(name);
		field.setValue(getValue());
	}
	
	public void appendValue(T newValue) {
		throw new UnsupportedOperationException();
	}
	
	@Override
	public int hashCode() {
		return getName().hashCode();
	}
	
	@Override
	public boolean equals(Object obj) {
		if (obj instanceof PrimitiveField) {
			PrimitiveField<T> field = (PrimitiveField<T>) obj;
			return field.getName().equals(getName()) && field.getValue().equals(getValue());
		}
		return false;
	}
	
	public void setId(Integer id) {
		this.id = id;
	}
	
	public Integer getId() {
		return id;
	}	

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public Field getField() {
		return this.field;
	}

	public void setField(Field field) {
		this.field = field;
	}
	
	/**
	 * Returns the field's raw value as a string. By default, it uses getValue().toString().
	 * @return the field's value as a string representation
	 */
	public String getRawValue() {
		T object = getValue();
		if( object == null )
			return "";
		else
			return object.toString();
	}

	public String toXML() {
		StringBuilder str = new StringBuilder("<");
		str.append(getName());
		str.append(" id=\"");
		str.append(getId() == null ? "0" : getId());
		str.append("\" ");
		str.append(TYPE_TAG);
		str.append("=\"");
		str.append(getSimpleName());
		str.append("\"><![CDATA[");
		str.append(getRawValue());
		str.append("]]></" + getName() + ">");
		return str.toString();
	}
	
	public abstract String getSimpleName();
	
	public void fromXML(NativeElement xml) {
		String id = xml.getAttribute("id");
		String name = xml.getNodeName();
		if ("prim".equals(name))
			name = xml.getAttribute("name");
		String value = xml.getTextContent();
		
		setId(Integer.valueOf(id));
		setName(name);
		setRawValue(value);
	}
}
