package org.iucn.sis.shared.api.models.primitivefields;

import org.iucn.sis.shared.api.models.Field;
import org.iucn.sis.shared.api.models.PrimitiveField;

/**
 * FloatPrimitiveField generated by hbm2java
 */
public class FloatPrimitiveField extends PrimitiveField<Float> implements
		java.io.Serializable {

	private Float value;

	public FloatPrimitiveField() {
	}
	
	public FloatPrimitiveField(String name, Field field) {
		super(name, field);
	}

	public FloatPrimitiveField(String name, Field field, Float value) {
		super(name, field);
		this.value = value;
	}

	public Float getValue() {
		return this.value;
	}

	public void setValue(Float value) {
		this.value = value;
	}

	@Override
	/**
	 * Performs addition - newValue + current float value.
	 */
	public void appendValue(Float newValue) {
		setValue(getValue() + newValue);
	}

	@Override
	public FloatPrimitiveField deepCopy() {
		FloatPrimitiveField ret = new FloatPrimitiveField();
		copyInto(ret);
		return ret;
	}
	
	@Override
	public String getSimpleName() {
		return PrimitiveFieldType.FLOAT_PRIMITIVE.getName();
	}

	@Override
	public void setRawValue(String value) throws NumberFormatException {
		if( value != null && !value.equals("") )
			setValue(Float.valueOf(value.replaceAll(",", "")));
	}
}
